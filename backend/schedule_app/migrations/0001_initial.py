# Generated by Django 5.2.7 on 2025-10-06 18:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xml_id', models.IntegerField(unique=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('code', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xml_id', models.IntegerField(unique=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Instructor',
                'verbose_name_plural': 'Instructores',
                'db_table': 'instructors',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xml_id', models.IntegerField(unique=True)),
                ('capacity', models.IntegerField()),
                ('location', models.CharField(blank=True, max_length=100)),
                ('is_constraint', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
                'db_table': 'rooms',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fitness_score', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Horario',
                'verbose_name_plural': 'Horarios',
                'db_table': 'schedules',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xml_id', models.IntegerField(unique=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xml_id', models.IntegerField(unique=True)),
                ('config', models.IntegerField(null=True)),
                ('subpart', models.IntegerField(null=True)),
                ('class_limit', models.IntegerField()),
                ('committed', models.BooleanField(default=False)),
                ('scheduler', models.IntegerField(null=True)),
                ('dates', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='schedule_app.class')),
                ('offering', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='schedule_app.course')),
            ],
            options={
                'verbose_name': 'Clase',
                'verbose_name_plural': 'Clases',
                'db_table': 'classes',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.CharField(max_length=7)),
                ('start_time', models.IntegerField()),
                ('length', models.IntegerField()),
                ('preference', models.FloatField(default=0.0)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='schedule_app.class')),
            ],
            options={
                'verbose_name': 'Slot de Tiempo',
                'verbose_name_plural': 'Slots de Tiempo',
                'db_table': 'time_slots',
            },
        ),
        migrations.CreateModel(
            name='ClassInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', to='schedule_app.class')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='schedule_app.instructor')),
            ],
            options={
                'verbose_name': 'Instructor de Clase',
                'verbose_name_plural': 'Instructores de Clases',
                'db_table': 'class_instructors',
                'unique_together': {('class_obj', 'instructor')},
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference', models.FloatField(default=0.0)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_prefs', to='schedule_app.class')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_prefs', to='schedule_app.room')),
            ],
            options={
                'verbose_name': 'Aula de Clase',
                'verbose_name_plural': 'Aulas de Clases',
                'db_table': 'class_rooms',
                'unique_together': {('class_obj', 'room')},
            },
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_students', to='schedule_app.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_classes', to='schedule_app.student')),
            ],
            options={
                'verbose_name': 'Estudiante en Clase',
                'verbose_name_plural': 'Estudiantes en Clases',
                'db_table': 'student_classes',
                'unique_together': {('student', 'class_obj')},
            },
        ),
        migrations.CreateModel(
            name='ScheduleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule_app.class')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule_app.room')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='schedule_app.schedule')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule_app.timeslot')),
            ],
            options={
                'verbose_name': 'Asignaci√≥n de Horario',
                'verbose_name_plural': 'Asignaciones de Horarios',
                'db_table': 'schedule_assignments',
                'unique_together': {('schedule', 'class_obj')},
            },
        ),
    ]
